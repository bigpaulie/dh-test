name: Semantic Versioning

on:
    push:
        branches:
            - main  # Modify this branch as needed

jobs:
    version:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Fetch all tags

            - name: Determine Previous Version
              id: get_previous_version
              run: |
                  # Determine the latest release version using git tags
                  latest_release_tag=$(git describe --tags --abbrev=0 2>/dev/null)
                  
                  if [ -z "$latest_release_tag" ]; then
                    previous_version="1.0.0"
                  else
                    previous_version=${latest_release_tag#v}
                  fi
                  echo "PREVIOUS_VERSION=$previous_version" >> $GITHUB_ENV

            - name: Check Commit Messages
              id: check_commits
              run: |
                  increment=""
                  if git log --format=%B -n 1 HEAD | grep -qE "^feat:"; then
                    increment="major"
                  elif git log --format=%B -n 1 HEAD | grep -qE "^fix:"; then
                    increment="minor"
                  elif git log --format=%B -n 1 HEAD | grep -qE "^docs:"; then
                    increment="patch"
                  fi
                  echo "INCREMENT=$increment" >> $GITHUB_ENV

            - name: Increment Version
              id: increment_version
              if: steps.check_commits.outputs.INCREMENT != ''  # Only run if keywords were found
              run: |
                  if [[ "$INCREMENT" == "major" ]]; then
                    VERSION=$(docker run --rm alpine/semver semver -c -i major $PREVIOUS_VERSION)
                  elif [[ "$INCREMENT" == "minor" ]]; then
                    VERSION=$(docker run --rm alpine/semver semver -c -i minor $PREVIOUS_VERSION)
                  elif [[ "$INCREMENT" == "patch" ]]; then
                    VERSION=$(docker run --rm alpine/semver semver -c -i patch $PREVIOUS_VERSION)
                  else
                    # If no increment found, use the previous version as is
                    echo "VERSION=$PREVIOUS_VERSION" >> $GITHUB_ENV
                  fi
                  echo "VERSION=$VERSION" >> $GITHUB_ENV

            - name: Display New Version
              if: steps.check_commits.outputs.INCREMENT != ''  # Only run if keywords were found
              run: |
                  echo "Previous version: $PREVIOUS_VERSION"
                  echo "New version: $VERSION"

            - name: Create Tag
              if: steps.check_commits.outputs.INCREMENT != ''  # Only run if keywords were found
              env:
                  GITHUB_TOKEN: ${{ secrets.TOKEN }}
              run: |
                  git config user.name "GitHub Actions"
                  git config user.email "github-actions@users.noreply.github.com"
                  git tag -a "$VERSION" -m "Release version $VERSION"
                  git push origin $VERSION